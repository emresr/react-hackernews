datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String 
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  likes         Like[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  hiddenBy User[] @relation("hidden")
}

model User {
  id      Int      @default(autoincrement()) @id
  email   String   @unique
  password String
  name    String?
  posts   Post[]
  followedBy  User[]   @relation("UserFollows", references: [id])
  following   User[]   @relation("UserFollows", references: [id])
    likes         Like[]
  comments  Comment[]
  commentsToComments CommentToComment[]
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  karma Int @default(1)
  about String @default("")
hidden Post[] @relation("hidden")
}

model Like {
  id      Int      @default(autoincrement()) @id
  post      Post    @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Comment {
  id      Int      @default(autoincrement()) @id
  text     String
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  commentsToComment CommentToComment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  comments Comment[] @relation("Comment", references: [id])
  commentTo Comment[] @relation("Comment", references: [id])
  commentIndex Int @default(0)
}
model CommentToComment {
  id      Int      @default(autoincrement()) @id
  text     String
  comment   Comment    @relation(fields: [commentId], references: [id])
  commentId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
    createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Jobs{
    id      Int      @default(autoincrement()) @id
  title     String
}